Search.setIndex({docnames:["api/modules","api/spnflow","api/spnflow.algorithms","api/spnflow.io","api/spnflow.learning","api/spnflow.learning.splitting","api/spnflow.optimization","api/spnflow.structure","api/spnflow.tensorflow","api/spnflow.tensorflow.layers","api/spnflow.tensorflow.model","api/spnflow.utils","index"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":2,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,sphinx:56},filenames:["api/modules.rst","api/spnflow.rst","api/spnflow.algorithms.rst","api/spnflow.io.rst","api/spnflow.learning.rst","api/spnflow.learning.splitting.rst","api/spnflow.optimization.rst","api/spnflow.structure.rst","api/spnflow.tensorflow.rst","api/spnflow.tensorflow.layers.rst","api/spnflow.tensorflow.model.rst","api/spnflow.utils.rst","index.rst"],objects:{"":{spnflow:[1,0,0,"-"]},"spnflow.algorithms":{evaluation:[2,0,0,"-"],inference:[2,0,0,"-"],mpe:[2,0,0,"-"],sampling:[2,0,0,"-"]},"spnflow.algorithms.evaluation":{eval_bottom_up:[2,1,1,""],eval_top_down:[2,1,1,""]},"spnflow.algorithms.inference":{leaf_likelihood:[2,1,1,""],leaf_log_likelihood:[2,1,1,""],likelihood:[2,1,1,""],log_likelihood:[2,1,1,""],node_likelihood:[2,1,1,""],node_log_likelihood:[2,1,1,""]},"spnflow.algorithms.mpe":{leaf_mpe:[2,1,1,""],mpe:[2,1,1,""],sum_mpe:[2,1,1,""]},"spnflow.algorithms.sampling":{leaf_sample:[2,1,1,""],sample:[2,1,1,""],sum_sample:[2,1,1,""]},"spnflow.io":{json:[3,0,0,"-"]},"spnflow.io.json":{json_obj_spn:[3,1,1,""],json_spn_obj:[3,1,1,""],load_json:[3,1,1,""],save_json:[3,1,1,""]},"spnflow.learning":{leaf:[4,0,0,"-"],splitting:[5,0,0,"-"],structure:[4,0,0,"-"],wrappers:[4,0,0,"-"]},"spnflow.learning.leaf":{get_learn_leaf_method:[4,1,1,""],learn_isotonic:[4,1,1,""],learn_mle:[4,1,1,""]},"spnflow.learning.splitting":{cols:[5,0,0,"-"],gmm:[5,0,0,"-"],kmeans:[5,0,0,"-"],random:[5,0,0,"-"],rdc:[5,0,0,"-"],rows:[5,0,0,"-"]},"spnflow.learning.splitting.cols":{get_split_cols_method:[5,1,1,""],split_cols_clusters:[5,1,1,""]},"spnflow.learning.splitting.gmm":{gmm:[5,1,1,""]},"spnflow.learning.splitting.kmeans":{kmeans:[5,1,1,""]},"spnflow.learning.splitting.random":{random_cols:[5,1,1,""],random_rows:[5,1,1,""]},"spnflow.learning.splitting.rdc":{rdc_cca:[5,1,1,""],rdc_cols:[5,1,1,""],rdc_rows:[5,1,1,""],rdc_transform:[5,1,1,""]},"spnflow.learning.splitting.rows":{get_split_rows_method:[5,1,1,""],split_rows_clusters:[5,1,1,""]},"spnflow.learning.structure":{Operation:[4,2,1,""],choose_next_operation:[4,1,1,""],learn_structure:[4,1,1,""]},"spnflow.learning.structure.Operation":{CREATE_LEAF:[4,3,1,""],REM_FEATURE:[4,3,1,""],SPLIT_COLS:[4,3,1,""],SPLIT_NAIVE:[4,3,1,""],SPLIT_ROWS:[4,3,1,""]},"spnflow.learning.wrappers":{learn_classifier:[4,1,1,""]},"spnflow.optimization":{pruning:[6,0,0,"-"]},"spnflow.optimization.pruning":{prune:[6,1,1,""]},"spnflow.structure":{leaf:[7,0,0,"-"],node:[7,0,0,"-"]},"spnflow.structure.leaf":{Bernoulli:[7,2,1,""],Gamma:[7,2,1,""],Gaussian:[7,2,1,""],Isotonic:[7,2,1,""],Leaf:[7,2,1,""],LeafType:[7,2,1,""],Multinomial:[7,2,1,""],Poisson:[7,2,1,""],Uniform:[7,2,1,""]},"spnflow.structure.leaf.Bernoulli":{LEAF_TYPE:[7,3,1,""],fit:[7,4,1,""],likelihood:[7,4,1,""],log_likelihood:[7,4,1,""],mode:[7,4,1,""],params_count:[7,4,1,""],params_dict:[7,4,1,""],sample:[7,4,1,""]},"spnflow.structure.leaf.Gamma":{LEAF_TYPE:[7,3,1,""],fit:[7,4,1,""],likelihood:[7,4,1,""],log_likelihood:[7,4,1,""],mode:[7,4,1,""],params_count:[7,4,1,""],params_dict:[7,4,1,""],sample:[7,4,1,""]},"spnflow.structure.leaf.Gaussian":{LEAF_TYPE:[7,3,1,""],fit:[7,4,1,""],likelihood:[7,4,1,""],log_likelihood:[7,4,1,""],mode:[7,4,1,""],params_count:[7,4,1,""],params_dict:[7,4,1,""],sample:[7,4,1,""]},"spnflow.structure.leaf.Isotonic":{LEAF_TYPE:[7,3,1,""],fit:[7,4,1,""],likelihood:[7,4,1,""],log_likelihood:[7,4,1,""],mode:[7,4,1,""],params_count:[7,4,1,""],params_dict:[7,4,1,""],sample:[7,4,1,""]},"spnflow.structure.leaf.Leaf":{fit:[7,4,1,""],likelihood:[7,4,1,""],log_likelihood:[7,4,1,""],mode:[7,4,1,""],params_count:[7,4,1,""],params_dict:[7,4,1,""],sample:[7,4,1,""]},"spnflow.structure.leaf.LeafType":{CONTINUOUS:[7,3,1,""],DISCRETE:[7,3,1,""]},"spnflow.structure.leaf.Multinomial":{LEAF_TYPE:[7,3,1,""],fit:[7,4,1,""],likelihood:[7,4,1,""],log_likelihood:[7,4,1,""],mode:[7,4,1,""],params_count:[7,4,1,""],params_dict:[7,4,1,""],sample:[7,4,1,""]},"spnflow.structure.leaf.Poisson":{LEAF_TYPE:[7,3,1,""],fit:[7,4,1,""],likelihood:[7,4,1,""],log_likelihood:[7,4,1,""],mode:[7,4,1,""],params_count:[7,4,1,""],params_dict:[7,4,1,""],sample:[7,4,1,""]},"spnflow.structure.leaf.Uniform":{LEAF_TYPE:[7,3,1,""],fit:[7,4,1,""],likelihood:[7,4,1,""],log_likelihood:[7,4,1,""],mode:[7,4,1,""],params_count:[7,4,1,""],params_dict:[7,4,1,""],sample:[7,4,1,""]},"spnflow.structure.node":{Mul:[7,2,1,""],Node:[7,2,1,""],Sum:[7,2,1,""],assign_ids:[7,1,1,""],bfs:[7,1,1,""],dfs_post_order:[7,1,1,""]},"spnflow.structure.node.Mul":{likelihood:[7,4,1,""],log_likelihood:[7,4,1,""]},"spnflow.structure.node.Node":{likelihood:[7,4,1,""],log_likelihood:[7,4,1,""]},"spnflow.structure.node.Sum":{likelihood:[7,4,1,""],log_likelihood:[7,4,1,""]},"spnflow.tensorflow":{layers:[9,0,0,"-"],model:[10,0,0,"-"],utils:[8,0,0,"-"]},"spnflow.tensorflow.layers":{rat:[9,0,0,"-"]},"spnflow.tensorflow.layers.rat":{DropoutLayer:[9,2,1,""],GaussianLayer:[9,2,1,""],ProductLayer:[9,2,1,""],RootLayer:[9,2,1,""],SumLayer:[9,2,1,""]},"spnflow.tensorflow.layers.rat.DropoutLayer":{build:[9,4,1,""],call:[9,4,1,""]},"spnflow.tensorflow.layers.rat.GaussianLayer":{build:[9,4,1,""],call:[9,4,1,""],sample:[9,4,1,""]},"spnflow.tensorflow.layers.rat.ProductLayer":{build:[9,4,1,""],call:[9,4,1,""],sample:[9,4,1,""]},"spnflow.tensorflow.layers.rat.RootLayer":{build:[9,4,1,""],call:[9,4,1,""],sample:[9,4,1,""]},"spnflow.tensorflow.layers.rat.SumLayer":{build:[9,4,1,""],call:[9,4,1,""],sample:[9,4,1,""]},"spnflow.tensorflow.model":{flow:[10,0,0,"-"],rat:[10,0,0,"-"]},"spnflow.tensorflow.model.flow":{AutoregressiveRatSpn:[10,2,1,""]},"spnflow.tensorflow.model.flow.AutoregressiveRatSpn":{build:[10,4,1,""],call:[10,4,1,""],sample:[10,4,1,""]},"spnflow.tensorflow.model.rat":{RatSpn:[10,2,1,""]},"spnflow.tensorflow.model.rat.RatSpn":{build:[10,4,1,""],call:[10,4,1,""],sample:[10,4,1,""]},"spnflow.tensorflow.utils":{log_loss:[8,1,1,""]},"spnflow.utils":{data:[11,0,0,"-"],filter:[11,0,0,"-"],region:[11,0,0,"-"],statistics:[11,0,0,"-"],validity:[11,0,0,"-"]},"spnflow.utils.data":{get_data_domains:[11,1,1,""],ohe_data:[11,1,1,""]},"spnflow.utils.filter":{filter_nodes_type:[11,1,1,""],get_nodes:[11,1,1,""]},"spnflow.utils.region":{RegionGraph:[11,2,1,""]},"spnflow.utils.region.RegionGraph":{make_layers:[11,4,1,""],random_layers:[11,4,1,""]},"spnflow.utils.statistics":{get_depth:[11,1,1,""],get_edges_count:[11,1,1,""],get_parameters_count:[11,1,1,""],get_statistics:[11,1,1,""]},"spnflow.utils.validity":{assert_is_valid:[11,1,1,""],is_complete:[11,1,1,""],is_consistent:[11,1,1,""],is_labeled:[11,1,1,""],is_valid:[11,1,1,""]},spnflow:{algorithms:[2,0,0,"-"],io:[3,0,0,"-"],learning:[4,0,0,"-"],optimization:[6,0,0,"-"],structure:[7,0,0,"-"],tensorflow:[8,0,0,"-"],utils:[11,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","function","Python function"],"2":["py","class","Python class"],"3":["py","attribute","Python attribute"],"4":["py","method","Python method"]},objtypes:{"0":"py:module","1":"py:function","2":"py:class","3":"py:attribute","4":"py:method"},terms:{"boolean":[4,9],"break":7,"class":[4,7,9,10,11],"enum":[4,7],"function":[2,4,5,7,8,11],"return":[2,3,4,5,6,7,8,9,10,11],"true":[10,11],BFS:7,DFS:7,For:[7,11],One:11,The:[2,3,4,5,6,7,8,9,10,11],activ:10,acycl:11,addition:2,algorithm:[0,1],all:11,alpha:[5,7],also:[2,4,11],altern:11,alwai:11,among:5,ani:11,appropri:[2,4],argument:[9,10],arrai:5,assert:11,assert_is_valid:11,assign:7,assign_id:7,associ:11,autoregress:10,autoregressiveratspn:10,base:[4,7,9,10,11],base_lay:9,batch_norm:10,belong:5,bernoulli:7,beta:[5,7],between:11,bfs:7,binari:5,bottom:2,branch:2,breadth:7,build:[9,10],call:[9,10,11],can:[4,7,11],canon:5,categor:7,cca:5,check:11,child:11,children:[2,7,11],choos:[2,4,5],choose_next_oper:4,chosen:2,class_idx:4,classifi:4,close:11,cluster:5,coeffici:5,col:[1,4],collect:11,column:[4,5],complet:11,compos:[4,11],comput:[2,5,7,11],connect:11,consecut:11,consist:11,construct:11,contain:[7,11],content:[0,12],continu:7,convert:3,correctli:11,correl:5,correspond:[5,11],create_leaf:4,cross:11,data:[0,1,4,5,7],decompos:11,defin:11,deliv:11,densiti:7,depend:5,depth:[7,9,10,11],deviat:5,dfs_post_ord:7,dictionari:[7,11],direct:11,discret:7,disjoint:11,distribut:[2,4,5,7,9,10,11],domain:[4,7,11],down:2,dropout:[9,10],dropoutlay:9,dummi:[8,9],each:[2,4,5,7,9,11],easili:11,edg:11,element:[5,11],empti:11,encod:11,end:11,engin:[9,10],entri:11,equival:6,estim:[2,4],eval_bottom_up:2,eval_top_down:2,evalu:[0,1,7,9],execut:[4,5,7,9],fail:4,fals:[2,11],featur:[2,4,5,11],file:3,filenam:3,fill:2,filter:[0,1],filter_nodes_typ:11,first:[5,7],fit:7,flag:2,flow:[1,8],follow:[2,11],from:[2,3,5,7,9,10],func:7,furthermor:11,gamma:7,gaussian:[5,7,9],gaussianlay:9,gener:[9,11],get:[4,5,7,11],get_data_domain:11,get_depth:11,get_edges_count:11,get_learn_leaf_method:4,get_nod:11,get_parameters_count:11,get_split_cols_method:5,get_split_rows_method:5,get_statist:11,give:4,given:[2,4,5,6,7,9,11],gmm:[1,4],graph:11,handl:2,has:11,have:[2,4,7],hidden_unit:10,horizont:[4,5],hot:11,hyperparamet:4,ids:7,idx_offset:9,idx_partit:9,idx_partiton:9,idx_region:9,improv:10,independ:5,index:[2,4,5,12],indic:[2,4,9,11],infer:[0,1],infinit:2,initi:11,input:[2,3,7,8,9,10,11],input_shap:[9,10],integ:11,intern:2,is_complet:11,is_consist:11,is_first:4,is_label:11,is_valid:11,isoton:[4,7],its:[2,11],job:4,json:[0,1],json_obj_spn:3,json_spn_obj:3,kera:[9,10],kmean:[1,4],kwarg:[4,9,10],label:11,largest:5,latent:5,layer:[1,8,11],leaf:[0,1,2,9,11],leaf_func:2,leaf_likelihood:2,leaf_log_likelihood:2,leaf_mp:2,leaf_sampl:2,leaf_typ:7,leaftyp:7,learn:[0,1],learn_classifi:4,learn_isoton:4,learn_leaf:4,learn_leaf_param:4,learn_ml:4,learn_structur:4,least:[2,11],leav:[2,11],likelihood:[2,4,7,8,9],linear:5,list:[2,4,5,11],load:3,load_json:3,loc:7,local:[4,5],log:[2,7,8,9],log_likelihood:[2,7],log_loss:8,logarithm:[2,7],loss:8,make_lay:11,mask:2,maxim:[2,8],maximum:[2,4],mean:[7,8],meta:7,method:[4,5],mid:7,min_cols_slic:4,min_rows_slic:4,minim:6,minimum:4,mle:4,mode:[7,9],model:[1,8,9],modifi:7,modul:[0,12],mpe:[0,1],mul:7,multinomi:7,multipl:[7,11],multithread:4,must:[2,9,11],n_batch:[9,10],n_edg:11,n_featur:[10,11],n_job:4,n_leav:11,n_maf:10,n_mul:11,n_node:11,n_param:11,n_repetit:[10,11],n_sampl:[9,10],n_sum:[9,10,11],nan:2,neg:8,network:11,next:4,node:[0,1,2,3,4,9,11],node_func:2,node_likelihood:2,node_log_likelihood:2,non:[5,11],none:[4,9,10,11],normal:10,ntype:11,number:[2,4,5,7,9,10,11],obj:3,object:[3,7,11],ohe_data:11,one:[2,4],oper:4,optim:[0,1],optimize_scal:[9,10],option:4,order:7,origin:5,other:[4,9,10,11],otherwis:11,output:[2,3,10],over:11,overlap:11,packag:[0,12],pad:9,page:12,param:[4,11],paramet:[2,3,4,5,6,7,8,9,10,11],params_count:7,params_dict:7,parent:[4,11],partial:5,partit:[5,9,11],pipelin:5,poisson:7,possibl:4,post:7,posterior:2,procedur:11,product:[9,11],productlay:9,proport:5,prune:[0,1],put:2,python:[9,10],rand_stat:[10,11],random:[1,4,11],random_col:5,random_lay:11,random_row:5,randomli:[5,11],rat:[1,8],rate:9,ratspn:10,rdc:[1,4],rdc_cca:5,rdc_col:[4,5],rdc_row:5,rdc_transform:5,reason:11,region:[0,1,9],regiongraph:11,regul:5,regular:10,relu:10,rem_featur:4,remov:9,repetit:11,replac:2,repres:[2,11],represent:7,requir:4,respect:[4,5],result:[7,9],return_result:2,root:[2,3,4,6,7,9,11],rootlay:9,row:[1,4],same:[7,11],sampl:[0,1,4,5,7,9,10],save:3,save_json:3,scope:[4,5,7,11],search:[7,12],second:5,serializ:3,set:11,sever:4,shape:[9,10],simplifi:6,sin:5,singl:11,size:[2,5,7],slice:5,some:[2,4,5,7,9,11],sort:11,space:5,specif:11,specifi:11,split:[1,4],split_col:[4,5],split_cols_clust:5,split_cols_param:4,split_naiv:4,split_row:[4,5],split_rows_clust:5,split_rows_param:4,spn:[2,3,4,6,7,10,11],standard:5,start:7,statist:[0,1],stdev:7,string:[4,5],structur:[0,1],sub:[2,9],submodul:[0,1],subpackag:0,subset:11,sum:[2,7,9,11],sum_func:2,sum_mp:2,sum_sampl:2,sumlay:9,support:4,take:11,task:4,tensor:[9,10],tensorflow:[0,1],test:5,thei:11,thi:[2,11],threshold:5,todo:9,top:2,train:[4,7,9,10,11],transform:5,tupl:[4,11],two:4,type:[7,11],ufunc:5,uniform:7,union:11,uniqu:11,use:[4,5,11],used:9,using:[4,5],util:[0,1],valid:[0,1,4],valu:[2,4,5],variabl:[4,8,9,11],vertic:[4,5],weight:[5,7,11],whatev:10,where:[2,4,5],which:[2,11],whose:11,width:7,wrapper:[0,1],y_pred:8,y_true:8,zero:11},titles:["spnflow","spnflow package","spnflow.algorithms package","spnflow.io package","spnflow.learning package","spnflow.learning.splitting package","spnflow.optimization package","spnflow.structure package","spnflow.tensorflow package","spnflow.tensorflow.layers package","spnflow.tensorflow.model package","spnflow.utils package","Spnflow is a fast implementation of probabilistic circuits."],titleterms:{algorithm:2,circuit:12,col:5,content:[1,2,3,4,5,6,7,8,9,10,11],data:11,evalu:2,fast:12,filter:11,flow:10,gmm:5,implement:12,indic:12,infer:2,json:3,kmean:5,layer:9,leaf:[4,7],learn:[4,5],model:10,modul:[1,2,3,4,5,6,7,8,9,10,11],mpe:2,node:7,optim:6,packag:[1,2,3,4,5,6,7,8,9,10,11],probabilist:12,prune:6,random:5,rat:[9,10],rdc:5,region:11,row:5,sampl:2,split:5,spnflow:[0,1,2,3,4,5,6,7,8,9,10,11,12],statist:11,structur:[4,7],submodul:[2,3,4,5,6,7,8,9,10,11],subpackag:[1,4,8],tabl:12,tensorflow:[8,9,10],util:[8,11],valid:11,wrapper:4}})